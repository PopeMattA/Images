import rclpy
from rclpy.node import Node
from mavros_msgs.srv import CommandTOL
import time

class TakeoffNode(Node):
    def __init__(self):
        super().__init__('takeoff_node')
        self.takeoff_client = self.create_client(CommandTOL, '/mavros/cmd/takeoff')
        while not self.takeoff_client.wait_for_service(timeout_sec=1.0):
            self.get_logger().info('service not available, waiting again...')
        self.req = CommandTOL.Request()

    def send_takeoff_request(self, altitude):
        self.req.altitude = float(altitude)
        self.future = self.takeoff_client.call_async(self.req)
        rclpy.spin_until_future_complete(self, self.future)
        return self.future.result()

def main(args=None):
    rclpy.init(args=args)
    takeoff_node = TakeoffNode()
    try:
        response = takeoff_node.send_takeoff_request(10.0)  # Takeoff to 10 meters
        if response:
            takeoff_node.get_logger().info(f'Takeoff successful: {response.success}')
        else:
            takeoff_node.get_logger().error('Takeoff failed')
    finally:
        takeoff_node.destroy_node()
        rclpy.shutdown()

if __name__ == '__main__':
    main()
